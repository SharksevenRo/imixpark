
package cn.ebatech.imixpark.user.webService_fj;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "n_frdifSoap", targetNamespace = "http://tempurl.org")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NFrdifSoap {


    /**
     * 
     * @param outputpara
     * @param processdataResult
     * @param rtn
     * @param errormsg
     * @param inputpara
     * @param cmdid
     * @param userid
     * @param password
     */
    @WebMethod(action = "http://tempurl.org/processdata")
    @RequestWrapper(localName = "processdata", targetNamespace = "http://tempurl.org", className = "com.hyan.client2.Processdata")
    @ResponseWrapper(localName = "processdataResponse", targetNamespace = "http://tempurl.org", className = "com.hyan.client2.ProcessdataResponse")
    void processdata(
            @WebParam(name = "userid", targetNamespace = "http://tempurl.org")
            String userid,
            @WebParam(name = "password", targetNamespace = "http://tempurl.org")
            String password,
            @WebParam(name = "cmdid", targetNamespace = "http://tempurl.org")
            String cmdid,
            @WebParam(name = "inputpara", targetNamespace = "http://tempurl.org")
            String inputpara,
            @WebParam(name = "outputpara", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
            Holder<String> outputpara,
            @WebParam(name = "rtn", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
            Holder<Integer> rtn,
            @WebParam(name = "errormsg", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
            Holder<String> errormsg,
            @WebParam(name = "processdataResult", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.OUT)
            Holder<Short> processdataResult);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://tempurl.org/testconnect")
    @WebResult(name = "testconnectResult", targetNamespace = "http://tempurl.org")
    @RequestWrapper(localName = "testconnect", targetNamespace = "http://tempurl.org", className = "com.hyan.client2.Testconnect")
    @ResponseWrapper(localName = "testconnectResponse", targetNamespace = "http://tempurl.org", className = "com.hyan.client2.TestconnectResponse")
    String testconnect();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://tempurl.org/getversion")
    @WebResult(name = "getversionResult", targetNamespace = "http://tempurl.org")
    @RequestWrapper(localName = "getversion", targetNamespace = "http://tempurl.org", className = "com.hyan.client2.Getversion")
    @ResponseWrapper(localName = "getversionResponse", targetNamespace = "http://tempurl.org", className = "com.hyan.client2.GetversionResponse")
    String getversion();

    /**
     * 
     * @param rtn
     * @param errormsg
     * @param userid
     * @param password
     * @param testconnectuserResult
     */
    @WebMethod(action = "http://tempurl.org/testconnectuser")
    @RequestWrapper(localName = "testconnectuser", targetNamespace = "http://tempurl.org", className = "com.hyan.client2.Testconnectuser")
    @ResponseWrapper(localName = "testconnectuserResponse", targetNamespace = "http://tempurl.org", className = "com.hyan.client2.TestconnectuserResponse")
    void testconnectuser(
            @WebParam(name = "userid", targetNamespace = "http://tempurl.org")
            String userid,
            @WebParam(name = "password", targetNamespace = "http://tempurl.org")
            String password,
            @WebParam(name = "rtn", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
            Holder<Integer> rtn,
            @WebParam(name = "errormsg", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
            Holder<String> errormsg,
            @WebParam(name = "testconnectuserResult", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.OUT)
            Holder<Short> testconnectuserResult);

    /**
     * 
     * @param configinfo
     * @param storeid
     * @param rtn
     * @param token
     * @param errormsg
     * @param userid
     * @param password
     * @param getagentconfigResult
     * @param agentid
     */
    @WebMethod(action = "http://tempurl.org/getagentconfig")
    @RequestWrapper(localName = "getagentconfig", targetNamespace = "http://tempurl.org", className = "com.hyan.client2.Getagentconfig")
    @ResponseWrapper(localName = "getagentconfigResponse", targetNamespace = "http://tempurl.org", className = "com.hyan.client2.GetagentconfigResponse")
    void getagentconfig(
            @WebParam(name = "userid", targetNamespace = "http://tempurl.org")
            String userid,
            @WebParam(name = "password", targetNamespace = "http://tempurl.org")
            String password,
            @WebParam(name = "storeid", targetNamespace = "http://tempurl.org")
            String storeid,
            @WebParam(name = "agentid", targetNamespace = "http://tempurl.org")
            String agentid,
            @WebParam(name = "token", targetNamespace = "http://tempurl.org")
            String token,
            @WebParam(name = "rtn", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
            Holder<Short> rtn,
            @WebParam(name = "errormsg", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
            Holder<String> errormsg,
            @WebParam(name = "configinfo", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
            Holder<String> configinfo,
            @WebParam(name = "getagentconfigResult", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.OUT)
            Holder<Short> getagentconfigResult);

    /**
     * 
     * @param sendagentlogResult
     * @param loginfo
     * @param storeid
     * @param rtn
     * @param token
     * @param errormsg
     * @param userid
     * @param password
     * @param agentid
     */
    @WebMethod(action = "http://tempurl.org/sendagentlog")
    @RequestWrapper(localName = "sendagentlog", targetNamespace = "http://tempurl.org", className = "com.hyan.client2.Sendagentlog")
    @ResponseWrapper(localName = "sendagentlogResponse", targetNamespace = "http://tempurl.org", className = "com.hyan.client2.SendagentlogResponse")
    void sendagentlog(
            @WebParam(name = "userid", targetNamespace = "http://tempurl.org")
            String userid,
            @WebParam(name = "password", targetNamespace = "http://tempurl.org")
            String password,
            @WebParam(name = "storeid", targetNamespace = "http://tempurl.org")
            String storeid,
            @WebParam(name = "agentid", targetNamespace = "http://tempurl.org")
            String agentid,
            @WebParam(name = "token", targetNamespace = "http://tempurl.org")
            String token,
            @WebParam(name = "loginfo", targetNamespace = "http://tempurl.org")
            String loginfo,
            @WebParam(name = "rtn", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
            Holder<Short> rtn,
            @WebParam(name = "errormsg", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
            Holder<String> errormsg,
            @WebParam(name = "sendagentlogResult", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.OUT)
            Holder<Short> sendagentlogResult);

    /**
     * 
     * @param storeid
     * @param rtn
     * @param errormsg
     * @param lasttoken
     * @param userid
     * @param checkagentResult
     * @param lastdate
     * @param password
     * @param agentid
     */
    @WebMethod(action = "http://tempurl.org/checkagent")
    @RequestWrapper(localName = "checkagent", targetNamespace = "http://tempurl.org", className = "com.hyan.client2.Checkagent")
    @ResponseWrapper(localName = "checkagentResponse", targetNamespace = "http://tempurl.org", className = "com.hyan.client2.CheckagentResponse")
    void checkagent(
            @WebParam(name = "userid", targetNamespace = "http://tempurl.org")
            String userid,
            @WebParam(name = "password", targetNamespace = "http://tempurl.org")
            String password,
            @WebParam(name = "storeid", targetNamespace = "http://tempurl.org")
            String storeid,
            @WebParam(name = "agentid", targetNamespace = "http://tempurl.org")
            String agentid,
            @WebParam(name = "rtn", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
            Holder<Short> rtn,
            @WebParam(name = "errormsg", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
            Holder<String> errormsg,
            @WebParam(name = "lastdate", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
            Holder<String> lastdate,
            @WebParam(name = "lasttoken", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.INOUT)
            Holder<String> lasttoken,
            @WebParam(name = "checkagentResult", targetNamespace = "http://tempurl.org", mode = WebParam.Mode.OUT)
            Holder<Short> checkagentResult);

}
