<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="cn.ebatech.imixpark.demo.dao.UserDao">
	<select id="get" parameterType="long" resultType="User">
		select id, user_name, login_name
		from ss_user
		where id=#{id}
	</select>

    <select id="getAll" resultType="User">
        select id, user_name, login_name
        from ss_user
    </select>

    <select id="getUserByLoginName" parameterType="string" resultType="User">
        select id, user_name, login_name
        from ss_user
        where login_name=#{login_name}
    </select>

	<!-- 查询用户,演示: 1.输入用map传入多个参数 2.<where>语句, 智能添加where和and关键字 3.输出直接映射对象 -->
	<select id="search" parameterType="map" resultType="User">
		select id, user_name, login_name, pass_word, pass_salt
		from ss_user
		<where>
			<if test="login_name != null">
				login_name=#{login_name}
			</if>
			<if test="user_name != null">
				and user_name=#{user_name}
			</if>
		</where>
	</select>

	<!-- 插入用户： 1.由数据库生成id并赋值到user对象 2.输入用对象, 嵌套属性表达式#{team.id} -->
	<insert id="save" parameterType="User" useGeneratedKeys="true" keyProperty="id">
		insert into ss_user (user_name, login_name, pass_word, pass_salt)
		values (#{user_name}, #{login_name}, #{pass_word}, #{pass_salt})
	</insert>

	<!-- 更新用户 -->
	<update id="update" parameterType="User">
		update ss_user set user_name = #{user_name}, login_name = #{login_name}
		where id = #{id}
	</update>

	<!-- 删除用户 -->
	<delete id="delete" parameterType="long">
	     delete from ss_user where id=#{id}
	</delete>
</mapper> 
